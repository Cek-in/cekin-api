scalar Date

enum PotentialCovid {
  SEVERE
  MODERATE
  LOW
  NONE
}

type Query {
  getHello: String
  user: User!
  ownCheckIns: [CheckIn!]
  ownCheckInsDay(since: Date, to: Date): [CheckIn!]
  checkInSummary: [CheckInSummary!]!
  place(qrValue: String!): Place
}

type Mutation {
  createUser(languageCode: String!): User
  editUser(languageCode: String!): User
  resetPassword(email: String!): Boolean
  checkIn(qrValue: String): Boolean
  resendVerificationEmail: Boolean
}

type User {
  id: ID!
  userType: String!
  checkIns: [CheckIn!]
  potentialCovid: PotentialCovid
}

type Place {
  id: ID!
  name: String!
  latitude: Float!
  longitude: Float!
}

type CheckIn {
  id: ID!
  user: User!
  placeId: ID!
  place: Place!
  checkInTime: Date!
  checkOutTime: Date
}

type CheckInSummary {
  id: ID!
  placeId: ID!
  place: Place!
  count: Int!
}
